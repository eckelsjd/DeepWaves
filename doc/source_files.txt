# Instructions on how to use each source file

process_images.m
	- Install Matlab parallel computing toolbox
	- Choose 'mode' for plot_wavefield function
	- Run from src directory
	- Change 'parfor' loop to 'for' loop to use without parallel computing toolbox
	- This creates all real,imaginary, and mask images
	- Depends on data,images,labels directories

plot_wavefield.m
	- Function ran from within process_images.m
	- Choose the 'mode' argument to determine how the masks are produced
	- See the source code for more description
	- Calls filter_defect.m and has_mult_thicknesses.m helper functions

filter_defect.m
	- Uses kmeans Matlab function to automatically get the defect points
	- Helper function in generating segmentation masks
	- Still in 'testing' for round 1 files (multiple defects present)

display_dir.m
	- Helper function to quickly iterate through and check segmentation masks
	- Run from src directory
	- Hit any button to iterate through the images
	- Images will be displayed in a Matlab figure

run_sims.py
	- Run this file as a script in Ansys 19.1 workbench
	- Gathers all .step files from the 'models' directory
	- Opens Mechanical and sends ACT_mech_script.py to be executed
	- Saves all result files in 'data' directory
	- Performs simulation on all of the .step files gathered
	- Runtime = 10 hours for 224 sims

ACT_mech_script.py
	- ACT script run in Ansys Mechanical to set parameters and run simulation

unet_train.ipynb
	- Jupyter notebook to interactively train CNN model using fastai library

augment.py
	- Perform data augmentation to increase dataset size

norm_batch.m
	- helper function to calculate max and min values from a batch of images
	- to do batch normalization on a set of training images

